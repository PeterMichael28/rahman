import { useEffect, useState } from "react";
import { Link, useLocation } from "react-router-dom";
import icons from "~/assets/js/icons";
import { classNames } from "~/utilities/classNames";
import MobileNav from "./MobileNav";
import OpenToWork from "./OpenToWork";

const Header = () => {
  const location = useLocation();
  const pathname = location.pathname;

  const [showMobile, setShowMobile] = useState(false);

  const [isScrolled, setIsScrolled] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 50); // Update state when scrolled past 50px
    };

    window.addEventListener("scroll", handleScroll);

    // Cleanup function to remove event listener on unmount
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const navLists = [
    {
      label: "Home",
      href: "/",
      active: pathname === "/",
    },
    {
      label: "About",
      href: "/about",
      active: pathname === "/about",
    },
  ];
  return (
    <>
      <header
        className={classNames(
          "fixed top-0 bg-transparent w-full px-5 md:px-8 lg:px-4 py-3 z-40 transition-all duration-300",
          isScrolled && "glass"
        )}
      >
        <div className={classNames("max-w-[1200px] w-full mx-auto flex justify-between items-center ")}>
          <div className="flex gap-x-3 items-center">
            {/* logo */}

            <Link to="/">
              <svg xmlns="http://www.w3.org/2000/svg" width="32" height="25" viewBox="0 0 32 25" fill="none">
                <path
                  d="M21.3759 24.5C18.9704 24.5 16.6834 21.6298 14.5148 15.8895C14.1139 16.0535 13.713 16.172 13.3121 16.2449C12.9112 16.3178 12.5011 16.3542 12.082 16.3542C11.7722 16.3542 11.4806 16.3269 11.2073 16.2722C10.7699 16.8736 10.2961 17.4658 9.78588 18.049C9.27563 18.6139 8.72893 19.1606 8.14579 19.6891C7.25285 20.5091 6.32346 21.1287 5.35763 21.5478C4.3918 21.9852 3.38041 22.2039 2.32346 22.2039C0.810934 22.2039 0.0364465 21.6025 0 20.3998C0 19.8895 0.164009 19.4339 0.492027 19.033C0.820045 18.6139 1.22096 18.4043 1.69476 18.4043C2.041 18.4043 2.33257 18.5501 2.56948 18.8417C2.76993 19.0604 2.87016 19.3337 2.87016 19.6617C2.87016 20.5547 2.45103 21.0011 1.61276 21.0011C1.1754 21.0011 0.865604 20.828 0.683371 20.4818C0.774487 21.1378 1.30296 21.4658 2.26879 21.4658C2.48747 21.4658 2.68793 21.4385 2.87016 21.3838C5.00228 20.8371 6.92483 19.1606 8.63781 16.3542L9.21184 15.3702C8.20957 14.5319 7.70843 13.4021 7.70843 11.9806C7.70843 11.0877 7.96355 10.3041 8.4738 9.62984C8.98405 8.95558 9.68565 8.61845 10.5786 8.61845C11.2893 8.61845 11.9089 8.88269 12.4374 9.41116L13.5581 7.25171C14.3052 5.77563 15.0251 4.63667 15.7175 3.83485C16.5558 2.83257 17.5125 2.14009 18.5877 1.7574C18.1321 1.68451 17.6583 1.63895 17.1663 1.62073C16.6743 1.58428 16.1458 1.56606 15.5809 1.56606C12.2278 1.56606 9.84966 1.97608 8.44647 2.79613C7.49886 3.36105 6.77904 3.9533 6.28702 4.57289C5.75854 5.24715 5.49431 5.83941 5.49431 6.34966C5.49431 6.98747 5.87699 7.37927 6.64237 7.52506C6.89749 7.57973 7.15262 7.60706 7.40774 7.60706C9.1754 7.60706 10.8155 6.87813 12.328 5.42027C12.4009 5.34738 12.4829 5.32916 12.574 5.3656C12.6469 5.38383 12.6834 5.4385 12.6834 5.52961C12.6834 5.58428 12.6743 5.62073 12.656 5.63895C12.3645 6.00342 12.0091 6.34055 11.59 6.65034C11.1708 6.96014 10.6879 7.2426 10.1412 7.49772C9.04784 8.00797 7.99089 8.2631 6.97039 8.2631C6.16856 8.2631 5.47608 8.08087 4.89294 7.7164C4.20046 7.29727 3.85421 6.71412 3.85421 5.96697C3.85421 5.29271 4.13667 4.63667 4.70159 3.99886C5.55809 2.99658 7.07973 2.24943 9.26651 1.7574C10.1595 1.55695 11.0979 1.40205 12.082 1.29271C13.0843 1.18337 14.1412 1.1287 15.2528 1.1287C16 1.1287 16.6834 1.15604 17.303 1.21071C17.9408 1.24715 18.5148 1.31094 19.0251 1.40205C19.0068 1.40205 19.0159 1.41116 19.0524 1.42939C19.0888 1.42939 19.1526 1.4385 19.2437 1.45672C19.5171 1.38383 19.7722 1.32916 20.0091 1.29271C20.246 1.25626 20.4556 1.23804 20.6378 1.23804C21.4032 1.23804 21.7859 1.42939 21.7859 1.81207C21.7859 2.23121 21.4396 2.44078 20.7472 2.44078C20.5831 2.44078 20.3736 2.40433 20.1185 2.33144C19.8815 2.24032 19.6082 2.09453 19.2984 1.89408C17.9134 2.3861 16.7198 4.0262 15.7175 6.81435C15.3166 7.90775 14.9431 8.88269 14.5968 9.73918C14.2688 10.5774 13.9681 11.3064 13.6948 11.926C13.8952 12.3998 14.1139 12.8918 14.3508 13.4021C14.6059 13.9123 14.8793 14.4499 15.1708 15.0148C15.754 14.6503 16.3371 14.131 16.9203 13.4567C17.5216 12.7825 18.123 11.9442 18.7244 10.9419C19.2528 10.0672 19.7722 9.18337 20.2825 8.29043C20.7927 7.3975 21.3212 6.50456 21.8679 5.61162C22.5057 4.59112 23.1526 3.7164 23.8087 2.98747C24.4647 2.25854 25.1298 1.68451 25.8041 1.26538C26.5877 0.755126 27.5171 0.5 28.5923 0.5C29.4123 0.5 30.0774 0.673121 30.5877 1.01936C31.1344 1.3656 31.4077 1.87586 31.4077 2.55012C31.4077 3.04214 31.2893 3.43394 31.0524 3.72551C30.8337 4.01708 30.5513 4.16287 30.205 4.16287C29.5672 4.16287 29.2483 3.84396 29.2483 3.20615C29.2483 2.53189 29.5672 2.19476 30.205 2.19476C30.6606 2.19476 30.9431 2.39522 31.0524 2.79613C31.0888 2.43166 30.9248 2.12187 30.5604 1.86674C30.3599 1.72096 30.1503 1.62073 29.9317 1.56606C29.7312 1.49317 29.5308 1.45672 29.3303 1.45672C27.7813 1.45672 26.1686 2.459 24.492 4.46355C24.2187 4.79157 23.8633 5.26538 23.426 5.88497C22.9886 6.50456 22.4692 7.26993 21.8679 8.18109C20.6469 10.0034 19.6629 11.3702 18.9157 12.2813C18.3143 13.0103 17.7221 13.639 17.139 14.1674C16.574 14.6959 16 15.1241 15.4169 15.4522C16 16.4909 16.574 17.4385 17.139 18.295C17.7039 19.1333 18.2688 19.8804 18.8337 20.5364C20.2005 22.1401 21.385 22.9419 22.3872 22.9419C23.0979 22.9419 23.6264 22.6139 23.9727 21.9579C24.3007 21.3565 24.4647 20.6276 24.4647 19.7711C24.4647 18.8599 24.328 18.0672 24.0547 17.3929C23.9453 17.1196 23.9544 16.9829 24.082 16.9829C24.1549 16.9829 24.2278 17.0649 24.3007 17.2289C24.8292 18.2494 25.0934 19.279 25.0934 20.3178C25.0934 21.3929 24.7472 22.3497 24.0547 23.1879C23.344 24.0626 22.451 24.5 21.3759 24.5ZM9.6492 14.6321C9.99544 14.049 10.369 13.3747 10.7699 12.6093C11.1891 11.844 11.6355 10.9966 12.1093 10.0672C11.7631 9.77563 11.3986 9.62984 11.0159 9.62984C10.3599 9.62984 9.84055 9.93964 9.45786 10.5592C9.12984 11.1059 8.96583 11.7255 8.96583 12.418C8.96583 13.2745 9.19362 14.0125 9.6492 14.6321ZM12.328 15.8349C13.0569 15.8349 13.7312 15.6982 14.3508 15.4248L13.3667 12.582C12.8018 13.7483 12.2005 14.8144 11.5626 15.7802C11.6902 15.7984 11.8178 15.8166 11.9453 15.8349C12.0729 15.8349 12.2005 15.8349 12.328 15.8349Z"
                  fill="#7444EE"
                />
              </svg>
            </Link>

            {/* <div className="px-4 py-2 flex justify-center items-center gap-2 rounded-[20px] bg-onSecondary text-secondary font-medium text-sm">
              <span className="text-lg animate-pulse">{icons.dot}</span>
              <span className="animate-">Open to work</span>
            </div> */}
            <OpenToWork />
          </div>

          {/* desktop navigation */}
          <nav>
            <ul className="w-fit py-1 px-3  justify-center items-center rounded-[20px] bg-tertiaryContainer hidden lg:flex">
              {navLists.map((list, i) => (
                <li key={i}>
                  <Link
                    to={list.href}
                    className={classNames(
                      "px-4 py-2 flex justify-center items-center text-tertiary text-sm transition-all duration-300 hover:text-primary",
                      list.active && " bg-white rounded-[20px] font-bold !text-primary"
                    )}
                  >
                    {list.label}
                  </Link>
                </li>
              ))}

              {/* resume button */}

              <li>
                <a
                  href="/ABDULRAHMANRESUME.pdf"
                  download="ABDULRAHMANRESUME.pdf"
                  className={classNames(
                    "px-4 py-2 flex justify-center gap-1 items-center text-tertiary text-sm transition-all duration-300 hover:text-primary"
                  )}
                >
                  Resume
                  <span>{icons.arrowUpRight}</span>
                </a>
              </li>
            </ul>
          </nav>

          {/* mobile navigation */}
          <div className="lg:hidden">
            {/* mobile hamburger */}
            {!showMobile ? (
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="25"
                height="25"
                viewBox="0 0 25 25"
                fill="none"
                className="text-primary-text cursor-pointer md:hidden relative"
                onClick={() => setShowMobile(true)}
              >
                <path
                  d="M20.1777 13.75H16.1377C15.2003 13.75 14.6039 13.5324 14.2397 13.1838C13.8797 12.8393 13.6577 12.2816 13.6577 11.4V4.6C13.6577 3.71977 13.8815 3.16169 14.243 2.81668C14.6089 2.46734 15.2059 2.25 16.1377 2.25H20.1777C21.1151 2.25 21.7115 2.46763 22.0758 2.81624C22.4357 3.1607 22.6577 3.71844 22.6577 4.6V11.4C22.6577 12.2802 22.4339 12.8383 22.0725 13.1833C21.7065 13.5327 21.1095 13.75 20.1777 13.75ZM16.1377 2.75C15.5042 2.75 14.9375 2.8231 14.5679 3.1927C14.1946 3.56604 14.1577 4.10876 14.1577 4.6V11.4C14.1577 11.8912 14.1946 12.434 14.5679 12.8073C14.9375 13.1769 15.5042 13.25 16.1377 13.25H20.1777C20.8112 13.25 21.3779 13.1769 21.7475 12.8073C22.1209 12.434 22.1577 11.8912 22.1577 11.4V4.6C22.1577 4.10876 22.1209 3.56604 21.7475 3.1927C21.3779 2.8231 20.8112 2.75 20.1777 2.75H16.1377Z"
                  fill="#5A5566"
                  stroke="#5A5566"
                />
                <path
                  d="M20.1777 22.75H16.1377C15.2003 22.75 14.6039 22.5324 14.2397 22.1838C13.8797 21.8393 13.6577 21.2816 13.6577 20.4V18.6C13.6577 17.7198 13.8815 17.1617 14.243 16.8167C14.6089 16.4673 15.2059 16.25 16.1377 16.25H20.1777C21.1151 16.25 21.7115 16.4676 22.0758 16.8162C22.4357 17.1607 22.6577 17.7184 22.6577 18.6V20.4C22.6577 21.2802 22.4339 21.8383 22.0725 22.1833C21.7065 22.5327 21.1095 22.75 20.1777 22.75ZM16.1377 16.75C15.5042 16.75 14.9375 16.8231 14.5679 17.1927C14.1946 17.566 14.1577 18.1088 14.1577 18.6V20.4C14.1577 20.8912 14.1946 21.434 14.5679 21.8073C14.9375 22.1769 15.5042 22.25 16.1377 22.25H20.1777C20.8112 22.25 21.3779 22.1769 21.7475 21.8073C22.1209 21.434 22.1577 20.8912 22.1577 20.4V18.6C22.1577 18.1088 22.1209 17.566 21.7475 17.1927C21.3779 16.8231 20.8112 16.75 20.1777 16.75H16.1377Z"
                  fill="#5A5566"
                  stroke="#5A5566"
                />
                <path
                  d="M8.67772 22.75H4.63771C3.70032 22.75 3.10395 22.5324 2.73966 22.1838C2.37971 21.8393 2.15771 21.2816 2.15771 20.4V13.6C2.15771 12.7198 2.38151 12.1617 2.74295 11.8167C3.10892 11.4673 3.70595 11.25 4.63771 11.25H8.67772C9.61512 11.25 10.2115 11.4676 10.5758 11.8162C10.9357 12.1607 11.1577 12.7184 11.1577 13.6V20.4C11.1577 21.2802 10.9339 21.8383 10.5725 22.1833C10.2065 22.5327 9.60948 22.75 8.67772 22.75ZM4.63771 11.75C4.00419 11.75 3.4375 11.8231 3.06791 12.1927C2.69457 12.566 2.65771 13.1088 2.65771 13.6V20.4C2.65771 20.8912 2.69457 21.434 3.06791 21.8073C3.4375 22.1769 4.00419 22.25 4.63771 22.25H8.67772C9.31124 22.25 9.87793 22.1769 10.2475 21.8073C10.6209 21.434 10.6577 20.8912 10.6577 20.4V13.6C10.6577 13.1088 10.6209 12.566 10.2475 12.1927C9.87793 11.8231 9.31124 11.75 8.67772 11.75H4.63771Z"
                  fill="#5A5566"
                  stroke="#5A5566"
                />
                <path
                  d="M8.67772 8.75H4.63771C3.70032 8.75 3.10395 8.53237 2.73966 8.18376C2.37971 7.8393 2.15771 7.28156 2.15771 6.4V4.6C2.15771 3.71977 2.38151 3.16169 2.74295 2.81668C3.10892 2.46734 3.70595 2.25 4.63771 2.25H8.67772C9.61512 2.25 10.2115 2.46763 10.5758 2.81624C10.9357 3.1607 11.1577 3.71844 11.1577 4.6V6.4C11.1577 7.28023 10.9339 7.83831 10.5725 8.18332C10.2065 8.53266 9.60948 8.75 8.67772 8.75ZM4.63771 2.75C4.00419 2.75 3.4375 2.8231 3.06791 3.1927C2.69457 3.56604 2.65771 4.10876 2.65771 4.6V6.4C2.65771 6.89124 2.69457 7.43396 3.06791 7.8073C3.4375 8.1769 4.00419 8.25 4.63771 8.25H8.67772C9.31124 8.25 9.87793 8.1769 10.2475 7.8073C10.6209 7.43396 10.6577 6.89123 10.6577 6.4V4.6C10.6577 4.10876 10.6209 3.56604 10.2475 3.1927C9.87793 2.8231 9.31124 2.75 8.67772 2.75H4.63771Z"
                  fill="#5A5566"
                  stroke="#5A5566"
                />
              </svg>
            ) : (
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="25"
                height="25"
                viewBox="0 0 25 25"
                fill="none"
                onClick={() => setShowMobile(false)}
                className="text-primary-text cursor-pointer md:hidden relative"
              >
                <g clipPath="url(#clip0_40_2614)">
                  <path d="M19.4077 5.5L5.40771 19.5" stroke="#1A0E36" strokeWidth="1.73571" strokeLinecap="round" />
                  <path d="M5.40771 5.5L19.4077 19.5" stroke="#1A0E36" strokeWidth="1.73571" strokeLinecap="round" />
                </g>
                <defs>
                  <clipPath id="clip0_40_2614">
                    <rect width="24" height="24" fill="white" transform="translate(0.407715 0.5)" />
                  </clipPath>
                </defs>
              </svg>
            )}
          </div>
        </div>
      </header>

      <MobileNav showMobile={showMobile} setShowMobile={setShowMobile} list={navLists} />
    </>
  );
};

export default Header;
